{
  "info": {
    "_postman_id": "df9a4a3b-0eb9-446b-a7c1-8d875623cb1e",
    "name": "MOOVEES-ALL",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "19650814"
  },
  "item": [
    {
      "name": "LOGIN/ user not registered",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", function () {",
              "    pm.response.to.have.status(404);",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"newone\", \"password\":\"newone\"}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3002/api/login",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": ["api", "login"]
        },
        "description": "Log in to app with non existing credentials"
      },
      "response": []
    },
    {
      "name": "LOGIN/ user registered",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "const jsonData = pm.response.json();",
              "pm.test(\"Test data type of the response\", () => {",
              "  pm.expect(jsonData).to.be.an(\"array\");",
              "  pm.expect(jsonData).to.not.be.empty;",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"medic1111\", \"password\":\"1111\"}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3002/api/login",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": ["api", "login"]
        }
      },
      "response": []
    },
    {
      "name": "LOGIN/ no or missing data",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"username\":\"\",\n    \"password\":\"\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3002/api/login",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": ["api", "login"]
        }
      },
      "response": []
    },
    {
      "name": "LOGIN/ wrong credentials",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401\", function () {",
              "    pm.response.to.have.status(401);",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"medic1111\", \"password\":\"1112\"}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3002/api/login",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": ["api", "login"]
        }
      },
      "response": []
    },
    {
      "name": "REGISTER/ no or missing data",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const jsonData = pm.response.json();",
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Test data type of the response\", () => {",
              "  pm.expect(jsonData).to.be.an(\"object\");",
              "  pm.expect(jsonData).to.not.be.empty;",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"\", \"password\":\"\", \"email\":\"\"}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3002/api/register",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": ["api", "register"]
        }
      },
      "response": []
    },
    {
      "name": "REGISTER/ user not registered",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const jsonData = pm.response.json();",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "    pm.expect(jsonData).to.be.an(\"object\");",
              "});",
              "",
              "pm.test(\"response should be okay to process\", function () {",
              "    pm.response.to.not.be.error;",
              "    pm.response.to.not.have.jsonBody(\"error\");",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"username\": \"ndkaoskdosd\",\n    \"password\": \"newdksoakdosakd\",\n    \"email\": \"nes@fkeokfef.kokkoo.com\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3002/api/register",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": ["api", "register"]
        }
      },
      "response": []
    },
    {
      "name": "REGISTER/ already registered",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 409\", function () {",
              "    pm.response.to.have.status(409);",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"username\": \"newUserTet\",\n    \"password\": \"newUserTet\",\n    \"email\": \"newUserTest@newUsrst.com\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3002/api/register",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": ["api", "register"]
        }
      },
      "response": []
    },
    {
      "name": "SPEC/ get spec movie by id",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:3002/api/movie/tt4437732",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": ["api", "movie", "tt4437732"]
        }
      },
      "response": []
    },
    {
      "name": "NEW-WATCHED",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "const jsonData = pm.response.json();",
              "pm.test(\"Test data type of the response\", () => {",
              "  pm.expect(jsonData).to.be.an(\"array\");",
              "  pm.expect(jsonData).to.not.be.empty;",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"Title\": \"Orange Is the New Black\",\n  \"Year\": \"2013–2019\",\n  \"imdbID\": \"tt2372162\",\n  \"Type\": \"series\",\n  \"Poster\": \"https://m.media-amazon.com/images/M/MV5BYjYyM2FmMmMtZDgyZi00NGU3LWI3NzktODllZDY0YzQyNzgyXkEyXkFqcGdeQXVyMTkxNjUyNQ@@._V1_SX300.jpg\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3002/api/62dd9e76f2ebb09a7505614a/watched",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": ["api", "62dd9e76f2ebb09a7505614a", "watched"],
          "query": [
            {
              "key": "",
              "value": "",
              "disabled": true
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "REMOVE-FROM-WATCHED",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "url": {
          "raw": "http://localhost:3002/api/62dd9e76f2ebb09a7505614a/watched/remove/tt0104431",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": [
            "api",
            "62dd9e76f2ebb09a7505614a",
            "watched",
            "remove",
            "tt0104431"
          ]
        }
      },
      "response": []
    },
    {
      "name": "MOVE FROM WISH TO WATCHED",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "url": {
          "raw": "http://localhost:3002/api/62dd9e76f2ebb09a7505614a/wishlist/watched/tt0104431",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": [
            "api",
            "62dd9e76f2ebb09a7505614a",
            "wishlist",
            "watched",
            "tt0104431"
          ]
        }
      },
      "response": []
    },
    {
      "name": "ADD TO WISH",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});",
              "const jsonData = pm.response.json();",
              "pm.test(\"Test data type of the response\", () => {",
              "  pm.expect(jsonData).to.be.an(\"array\");",
              "  pm.expect(jsonData).to.not.be.empty;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"Title\": \"Home Alone 2: Lost in New York\",\n  \"Year\": \"1992\",\n  \"imdbID\": \"tt0104431\",\n  \"Type\": \"movie\",\n  \"Poster\": \"https://m.media-amazon.com/images/M/MV5BNDI1MzM0Y2YtYmIyMS00ODE3LTlhZjEtZTUyNmEzMTNhZWU5XkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3002/api/62dd9e76f2ebb09a7505614a/wish",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": ["api", "62dd9e76f2ebb09a7505614a", "wish"]
        }
      },
      "response": []
    },
    {
      "name": "REMOVE FROM WISH",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "url": {
          "raw": "http://localhost:3002/api/62dd9e76f2ebb09a7505614a/wishlist/remove/tt0104431",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": [
            "api",
            "62dd9e76f2ebb09a7505614a",
            "wishlist",
            "remove",
            "tt0104431"
          ]
        }
      },
      "response": []
    },
    {
      "name": "MOVIE/POST by title",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response time is less than 200ms\", function () {",
              "    pm.expect(pm.response.responseTime).to.be.below(200);",
              "});",
              "const jsonData = pm.response.json();",
              "pm.test(\"Test data type of the response\", () => {",
              "  pm.expect(jsonData).to.be.an(\"array\");",
              "  pm.expect(jsonData).to.not.be.empty;",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\"userInput\": \"titanic\"}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3002/api/movies/title",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3002",
          "path": ["api", "movies", "title"]
        }
      },
      "response": []
    }
  ]
}
